/**
 * This file was automatically generated by nexus-prisma@0.3.7
 * Do not make changes to this file directly
 */

import { core } from 'nexus'
import { GraphQLResolveInfo } from 'graphql'
import * as prisma from '../prisma-client'

declare global {
  interface NexusPrismaGen extends NexusPrismaTypes {}
}

export interface NexusPrismaTypes {
  objectTypes: {
    fields: {
      Query: QueryObject
      User: UserObject
      Material: MaterialObject
      UserConnection: UserConnectionObject
      PageInfo: PageInfoObject
      UserEdge: UserEdgeObject
      AggregateUser: AggregateUserObject
      MaterialConnection: MaterialConnectionObject
      MaterialEdge: MaterialEdgeObject
      AggregateMaterial: AggregateMaterialObject
      System: SystemObject
      SystemConnection: SystemConnectionObject
      SystemEdge: SystemEdgeObject
      AggregateSystem: AggregateSystemObject
      Mutation: MutationObject
      BatchPayload: BatchPayloadObject
      Subscription: SubscriptionObject
      UserSubscriptionPayload: UserSubscriptionPayloadObject
      UserPreviousValues: UserPreviousValuesObject
      MaterialSubscriptionPayload: MaterialSubscriptionPayloadObject
      MaterialPreviousValues: MaterialPreviousValuesObject
      SystemSubscriptionPayload: SystemSubscriptionPayloadObject
      SystemPreviousValues: SystemPreviousValuesObject
    }
    fieldsDetails: {
      Query: QueryFieldDetails
      User: UserFieldDetails
      Material: MaterialFieldDetails
      UserConnection: UserConnectionFieldDetails
      PageInfo: PageInfoFieldDetails
      UserEdge: UserEdgeFieldDetails
      AggregateUser: AggregateUserFieldDetails
      MaterialConnection: MaterialConnectionFieldDetails
      MaterialEdge: MaterialEdgeFieldDetails
      AggregateMaterial: AggregateMaterialFieldDetails
      System: SystemFieldDetails
      SystemConnection: SystemConnectionFieldDetails
      SystemEdge: SystemEdgeFieldDetails
      AggregateSystem: AggregateSystemFieldDetails
      Mutation: MutationFieldDetails
      BatchPayload: BatchPayloadFieldDetails
      Subscription: SubscriptionFieldDetails
      UserSubscriptionPayload: UserSubscriptionPayloadFieldDetails
      UserPreviousValues: UserPreviousValuesFieldDetails
      MaterialSubscriptionPayload: MaterialSubscriptionPayloadFieldDetails
      MaterialPreviousValues: MaterialPreviousValuesFieldDetails
      SystemSubscriptionPayload: SystemSubscriptionPayloadFieldDetails
      SystemPreviousValues: SystemPreviousValuesFieldDetails
    }
  }
  inputTypes: {
    fields: {
      UserWhereUniqueInput: UserWhereUniqueInputInputObject
      MaterialWhereInput: MaterialWhereInputInputObject
      UserWhereInput: UserWhereInputInputObject
      MaterialWhereUniqueInput: MaterialWhereUniqueInputInputObject
      SystemWhereUniqueInput: SystemWhereUniqueInputInputObject
      SystemWhereInput: SystemWhereInputInputObject
      UserCreateInput: UserCreateInputInputObject
      MaterialCreateManyWithoutAuthorInput: MaterialCreateManyWithoutAuthorInputInputObject
      MaterialCreateWithoutAuthorInput: MaterialCreateWithoutAuthorInputInputObject
      UserUpdateInput: UserUpdateInputInputObject
      MaterialUpdateManyWithoutAuthorInput: MaterialUpdateManyWithoutAuthorInputInputObject
      MaterialUpdateWithWhereUniqueWithoutAuthorInput: MaterialUpdateWithWhereUniqueWithoutAuthorInputInputObject
      MaterialUpdateWithoutAuthorDataInput: MaterialUpdateWithoutAuthorDataInputInputObject
      MaterialUpsertWithWhereUniqueWithoutAuthorInput: MaterialUpsertWithWhereUniqueWithoutAuthorInputInputObject
      MaterialScalarWhereInput: MaterialScalarWhereInputInputObject
      MaterialUpdateManyWithWhereNestedInput: MaterialUpdateManyWithWhereNestedInputInputObject
      MaterialUpdateManyDataInput: MaterialUpdateManyDataInputInputObject
      UserUpdateManyMutationInput: UserUpdateManyMutationInputInputObject
      MaterialCreateInput: MaterialCreateInputInputObject
      UserCreateOneWithoutMaterialsInput: UserCreateOneWithoutMaterialsInputInputObject
      UserCreateWithoutMaterialsInput: UserCreateWithoutMaterialsInputInputObject
      MaterialUpdateInput: MaterialUpdateInputInputObject
      UserUpdateOneWithoutMaterialsInput: UserUpdateOneWithoutMaterialsInputInputObject
      UserUpdateWithoutMaterialsDataInput: UserUpdateWithoutMaterialsDataInputInputObject
      UserUpsertWithoutMaterialsInput: UserUpsertWithoutMaterialsInputInputObject
      MaterialUpdateManyMutationInput: MaterialUpdateManyMutationInputInputObject
      SystemCreateInput: SystemCreateInputInputObject
      SystemUpdateInput: SystemUpdateInputInputObject
      SystemUpdateManyMutationInput: SystemUpdateManyMutationInputInputObject
      UserSubscriptionWhereInput: UserSubscriptionWhereInputInputObject
      MaterialSubscriptionWhereInput: MaterialSubscriptionWhereInputInputObject
      SystemSubscriptionWhereInput: SystemSubscriptionWhereInputInputObject
    }
  }
  enumTypes: {
    MaterialOrderByInput: MaterialOrderByInputValues,
    UserOrderByInput: UserOrderByInputValues,
    SystemOrderByInput: SystemOrderByInputValues,
    MutationType: MutationTypeValues,
  }
}

// Types for Query

type QueryObject =
  | QueryFields
  | { name: 'user', args?: QueryUserArgs[] | false, alias?: string  } 
  | { name: 'users', args?: QueryUsersArgs[] | false, alias?: string  } 
  | { name: 'usersConnection', args?: QueryUsersConnectionArgs[] | false, alias?: string  } 
  | { name: 'material', args?: QueryMaterialArgs[] | false, alias?: string  } 
  | { name: 'materials', args?: QueryMaterialsArgs[] | false, alias?: string  } 
  | { name: 'materialsConnection', args?: QueryMaterialsConnectionArgs[] | false, alias?: string  } 
  | { name: 'system', args?: QuerySystemArgs[] | false, alias?: string  } 
  | { name: 'systems', args?: QuerySystemsArgs[] | false, alias?: string  } 
  | { name: 'systemsConnection', args?: QuerySystemsConnectionArgs[] | false, alias?: string  } 

type QueryFields =
  | 'user'
  | 'users'
  | 'usersConnection'
  | 'material'
  | 'materials'
  | 'materialsConnection'
  | 'system'
  | 'systems'
  | 'systemsConnection'


type QueryUserArgs =
  | 'where'
type QueryUsersArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryUsersConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryMaterialArgs =
  | 'where'
type QueryMaterialsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryMaterialsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QuerySystemArgs =
  | 'where'
type QuerySystemsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QuerySystemsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface QueryFieldDetails {
  user: {
    type: 'User'
    args: Record<QueryUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: UserWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  users: {
    type: 'User'
    args: Record<QueryUsersArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: UserWhereInput | null, orderBy?: prisma.UserOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User[]> | prisma.User[]
  }
  usersConnection: {
    type: 'UserConnection'
    args: Record<QueryUsersConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: UserWhereInput | null, orderBy?: prisma.UserOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserConnection> | prisma.UserConnection
  }
  material: {
    type: 'Material'
    args: Record<QueryMaterialArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: MaterialWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Material | null> | prisma.Material | null
  }
  materials: {
    type: 'Material'
    args: Record<QueryMaterialsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: MaterialWhereInput | null, orderBy?: prisma.MaterialOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Material[]> | prisma.Material[]
  }
  materialsConnection: {
    type: 'MaterialConnection'
    args: Record<QueryMaterialsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: MaterialWhereInput | null, orderBy?: prisma.MaterialOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MaterialConnection> | prisma.MaterialConnection
  }
  system: {
    type: 'System'
    args: Record<QuerySystemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: SystemWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.System | null> | prisma.System | null
  }
  systems: {
    type: 'System'
    args: Record<QuerySystemsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: SystemWhereInput | null, orderBy?: prisma.SystemOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.System[]> | prisma.System[]
  }
  systemsConnection: {
    type: 'SystemConnection'
    args: Record<QuerySystemsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: SystemWhereInput | null, orderBy?: prisma.SystemOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SystemConnection> | prisma.SystemConnection
  }
}
  

// Types for User

type UserObject =
  | UserFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'role', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'openid', args?: [] | false, alias?: string  } 
  | { name: 'materials', args?: UserMaterialsArgs[] | false, alias?: string  } 
  | { name: 'status', args?: [] | false, alias?: string  } 

type UserFields =
  | 'id'
  | 'role'
  | 'email'
  | 'name'
  | 'openid'
  | 'materials'
  | 'status'


type UserMaterialsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface UserFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  role: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  openid: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  materials: {
    type: 'Material'
    args: Record<UserMaterialsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"User">,
      args: { where?: MaterialWhereInput | null, orderBy?: prisma.MaterialOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Material[]> | prisma.Material[]
  }
  status: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for Material

type MaterialObject =
  | MaterialFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'title', args?: [] | false, alias?: string  } 
  | { name: 'desc', args?: [] | false, alias?: string  } 
  | { name: 'published', args?: [] | false, alias?: string  } 
  | { name: 'author', args?: [] | false, alias?: string  } 

type MaterialFields =
  | 'id'
  | 'title'
  | 'desc'
  | 'published'
  | 'author'



  

export interface MaterialFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  title: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  desc: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  published: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  author: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Material">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
}
  

// Types for UserConnection

type UserConnectionObject =
  | UserConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type UserConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface UserConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'UserEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"UserConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserEdge[]> | prisma.UserEdge[]
  }
  aggregate: {
    type: 'AggregateUser'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateUser> | prisma.AggregateUser
  }
}
  

// Types for PageInfo

type PageInfoObject =
  | PageInfoFields
  | { name: 'hasNextPage', args?: [] | false, alias?: string  } 
  | { name: 'hasPreviousPage', args?: [] | false, alias?: string  } 
  | { name: 'startCursor', args?: [] | false, alias?: string  } 
  | { name: 'endCursor', args?: [] | false, alias?: string  } 

type PageInfoFields =
  | 'hasNextPage'
  | 'hasPreviousPage'
  | 'startCursor'
  | 'endCursor'



  

export interface PageInfoFieldDetails {
  hasNextPage: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  hasPreviousPage: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  startCursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  endCursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for UserEdge

type UserEdgeObject =
  | UserEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type UserEdgeFields =
  | 'node'
  | 'cursor'



  

export interface UserEdgeFieldDetails {
  node: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateUser

type AggregateUserObject =
  | AggregateUserFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateUserFields =
  | 'count'



  

export interface AggregateUserFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for MaterialConnection

type MaterialConnectionObject =
  | MaterialConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type MaterialConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface MaterialConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MaterialConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'MaterialEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"MaterialConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MaterialEdge[]> | prisma.MaterialEdge[]
  }
  aggregate: {
    type: 'AggregateMaterial'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MaterialConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateMaterial> | prisma.AggregateMaterial
  }
}
  

// Types for MaterialEdge

type MaterialEdgeObject =
  | MaterialEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type MaterialEdgeFields =
  | 'node'
  | 'cursor'



  

export interface MaterialEdgeFieldDetails {
  node: {
    type: 'Material'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MaterialEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Material> | prisma.Material
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateMaterial

type AggregateMaterialObject =
  | AggregateMaterialFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateMaterialFields =
  | 'count'



  

export interface AggregateMaterialFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for System

type SystemObject =
  | SystemFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'slogan', args?: [] | false, alias?: string  } 
  | { name: 'tel', args?: [] | false, alias?: string  } 
  | { name: 'version_code', args?: [] | false, alias?: string  } 

type SystemFields =
  | 'id'
  | 'name'
  | 'slogan'
  | 'tel'
  | 'version_code'



  

export interface SystemFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  slogan: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  tel: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  version_code: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for SystemConnection

type SystemConnectionObject =
  | SystemConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type SystemConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface SystemConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SystemConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'SystemEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"SystemConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SystemEdge[]> | prisma.SystemEdge[]
  }
  aggregate: {
    type: 'AggregateSystem'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SystemConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateSystem> | prisma.AggregateSystem
  }
}
  

// Types for SystemEdge

type SystemEdgeObject =
  | SystemEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type SystemEdgeFields =
  | 'node'
  | 'cursor'



  

export interface SystemEdgeFieldDetails {
  node: {
    type: 'System'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SystemEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.System> | prisma.System
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateSystem

type AggregateSystemObject =
  | AggregateSystemFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateSystemFields =
  | 'count'



  

export interface AggregateSystemFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Mutation

type MutationObject =
  | MutationFields
  | { name: 'createUser', args?: MutationCreateUserArgs[] | false, alias?: string  } 
  | { name: 'updateUser', args?: MutationUpdateUserArgs[] | false, alias?: string  } 
  | { name: 'updateManyUsers', args?: MutationUpdateManyUsersArgs[] | false, alias?: string  } 
  | { name: 'upsertUser', args?: MutationUpsertUserArgs[] | false, alias?: string  } 
  | { name: 'deleteUser', args?: MutationDeleteUserArgs[] | false, alias?: string  } 
  | { name: 'deleteManyUsers', args?: MutationDeleteManyUsersArgs[] | false, alias?: string  } 
  | { name: 'createMaterial', args?: MutationCreateMaterialArgs[] | false, alias?: string  } 
  | { name: 'updateMaterial', args?: MutationUpdateMaterialArgs[] | false, alias?: string  } 
  | { name: 'updateManyMaterials', args?: MutationUpdateManyMaterialsArgs[] | false, alias?: string  } 
  | { name: 'upsertMaterial', args?: MutationUpsertMaterialArgs[] | false, alias?: string  } 
  | { name: 'deleteMaterial', args?: MutationDeleteMaterialArgs[] | false, alias?: string  } 
  | { name: 'deleteManyMaterials', args?: MutationDeleteManyMaterialsArgs[] | false, alias?: string  } 
  | { name: 'createSystem', args?: MutationCreateSystemArgs[] | false, alias?: string  } 
  | { name: 'updateSystem', args?: MutationUpdateSystemArgs[] | false, alias?: string  } 
  | { name: 'updateManySystems', args?: MutationUpdateManySystemsArgs[] | false, alias?: string  } 
  | { name: 'upsertSystem', args?: MutationUpsertSystemArgs[] | false, alias?: string  } 
  | { name: 'deleteSystem', args?: MutationDeleteSystemArgs[] | false, alias?: string  } 
  | { name: 'deleteManySystems', args?: MutationDeleteManySystemsArgs[] | false, alias?: string  } 

type MutationFields =
  | 'createUser'
  | 'updateUser'
  | 'updateManyUsers'
  | 'upsertUser'
  | 'deleteUser'
  | 'deleteManyUsers'
  | 'createMaterial'
  | 'updateMaterial'
  | 'updateManyMaterials'
  | 'upsertMaterial'
  | 'deleteMaterial'
  | 'deleteManyMaterials'
  | 'createSystem'
  | 'updateSystem'
  | 'updateManySystems'
  | 'upsertSystem'
  | 'deleteSystem'
  | 'deleteManySystems'


type MutationCreateUserArgs =
  | 'data'
type MutationUpdateUserArgs =
  | 'data'
  | 'where'
type MutationUpdateManyUsersArgs =
  | 'data'
  | 'where'
type MutationUpsertUserArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteUserArgs =
  | 'where'
type MutationDeleteManyUsersArgs =
  | 'where'
type MutationCreateMaterialArgs =
  | 'data'
type MutationUpdateMaterialArgs =
  | 'data'
  | 'where'
type MutationUpdateManyMaterialsArgs =
  | 'data'
  | 'where'
type MutationUpsertMaterialArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteMaterialArgs =
  | 'where'
type MutationDeleteManyMaterialsArgs =
  | 'where'
type MutationCreateSystemArgs =
  | 'data'
type MutationUpdateSystemArgs =
  | 'data'
  | 'where'
type MutationUpdateManySystemsArgs =
  | 'data'
  | 'where'
type MutationUpsertSystemArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteSystemArgs =
  | 'where'
type MutationDeleteManySystemsArgs =
  | 'where'
  

export interface MutationFieldDetails {
  createUser: {
    type: 'User'
    args: Record<MutationCreateUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  updateUser: {
    type: 'User'
    args: Record<MutationUpdateUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserUpdateInput, where: UserWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  updateManyUsers: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyUsersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserUpdateManyMutationInput, where?: UserWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertUser: {
    type: 'User'
    args: Record<MutationUpsertUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: UserWhereUniqueInput, create: UserCreateInput, update: UserUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  deleteUser: {
    type: 'User'
    args: Record<MutationDeleteUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: UserWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  deleteManyUsers: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyUsersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: UserWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createMaterial: {
    type: 'Material'
    args: Record<MutationCreateMaterialArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: MaterialCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Material> | prisma.Material
  }
  updateMaterial: {
    type: 'Material'
    args: Record<MutationUpdateMaterialArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: MaterialUpdateInput, where: MaterialWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Material | null> | prisma.Material | null
  }
  updateManyMaterials: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyMaterialsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: MaterialUpdateManyMutationInput, where?: MaterialWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertMaterial: {
    type: 'Material'
    args: Record<MutationUpsertMaterialArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: MaterialWhereUniqueInput, create: MaterialCreateInput, update: MaterialUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Material> | prisma.Material
  }
  deleteMaterial: {
    type: 'Material'
    args: Record<MutationDeleteMaterialArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: MaterialWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Material | null> | prisma.Material | null
  }
  deleteManyMaterials: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyMaterialsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: MaterialWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createSystem: {
    type: 'System'
    args: Record<MutationCreateSystemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: SystemCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.System> | prisma.System
  }
  updateSystem: {
    type: 'System'
    args: Record<MutationUpdateSystemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: SystemUpdateInput, where: SystemWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.System | null> | prisma.System | null
  }
  updateManySystems: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManySystemsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: SystemUpdateManyMutationInput, where?: SystemWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertSystem: {
    type: 'System'
    args: Record<MutationUpsertSystemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: SystemWhereUniqueInput, create: SystemCreateInput, update: SystemUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.System> | prisma.System
  }
  deleteSystem: {
    type: 'System'
    args: Record<MutationDeleteSystemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: SystemWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.System | null> | prisma.System | null
  }
  deleteManySystems: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManySystemsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: SystemWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
}
  

// Types for BatchPayload

type BatchPayloadObject =
  | BatchPayloadFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type BatchPayloadFields =
  | 'count'



  

export interface BatchPayloadFieldDetails {
  count: {
    type: 'Long'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Subscription

type SubscriptionObject =
  | SubscriptionFields
  | { name: 'user', args?: SubscriptionUserArgs[] | false, alias?: string  } 
  | { name: 'material', args?: SubscriptionMaterialArgs[] | false, alias?: string  } 
  | { name: 'system', args?: SubscriptionSystemArgs[] | false, alias?: string  } 

type SubscriptionFields =
  | 'user'
  | 'material'
  | 'system'


type SubscriptionUserArgs =
  | 'where'
type SubscriptionMaterialArgs =
  | 'where'
type SubscriptionSystemArgs =
  | 'where'
  

export interface SubscriptionFieldDetails {
  user: {
    type: 'UserSubscriptionPayload'
    args: Record<SubscriptionUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: UserSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserSubscriptionPayload | null> | prisma.UserSubscriptionPayload | null
  }
  material: {
    type: 'MaterialSubscriptionPayload'
    args: Record<SubscriptionMaterialArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: MaterialSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MaterialSubscriptionPayload | null> | prisma.MaterialSubscriptionPayload | null
  }
  system: {
    type: 'SystemSubscriptionPayload'
    args: Record<SubscriptionSystemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: SystemSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SystemSubscriptionPayload | null> | prisma.SystemSubscriptionPayload | null
  }
}
  

// Types for UserSubscriptionPayload

type UserSubscriptionPayloadObject =
  | UserSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type UserSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface UserSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"UserSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'UserPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"UserSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserPreviousValues | null> | prisma.UserPreviousValues | null
  }
}
  

// Types for UserPreviousValues

type UserPreviousValuesObject =
  | UserPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'role', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'openid', args?: [] | false, alias?: string  } 
  | { name: 'status', args?: [] | false, alias?: string  } 

type UserPreviousValuesFields =
  | 'id'
  | 'role'
  | 'email'
  | 'name'
  | 'openid'
  | 'status'



  

export interface UserPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  role: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  openid: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  status: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for MaterialSubscriptionPayload

type MaterialSubscriptionPayloadObject =
  | MaterialSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type MaterialSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface MaterialSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MaterialSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Material'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"MaterialSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Material | null> | prisma.Material | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'MaterialPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"MaterialSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MaterialPreviousValues | null> | prisma.MaterialPreviousValues | null
  }
}
  

// Types for MaterialPreviousValues

type MaterialPreviousValuesObject =
  | MaterialPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'title', args?: [] | false, alias?: string  } 
  | { name: 'desc', args?: [] | false, alias?: string  } 
  | { name: 'published', args?: [] | false, alias?: string  } 

type MaterialPreviousValuesFields =
  | 'id'
  | 'title'
  | 'desc'
  | 'published'



  

export interface MaterialPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  title: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  desc: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  published: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for SystemSubscriptionPayload

type SystemSubscriptionPayloadObject =
  | SystemSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type SystemSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface SystemSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SystemSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'System'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"SystemSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.System | null> | prisma.System | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'SystemPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"SystemSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SystemPreviousValues | null> | prisma.SystemPreviousValues | null
  }
}
  

// Types for SystemPreviousValues

type SystemPreviousValuesObject =
  | SystemPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'slogan', args?: [] | false, alias?: string  } 
  | { name: 'tel', args?: [] | false, alias?: string  } 
  | { name: 'version_code', args?: [] | false, alias?: string  } 

type SystemPreviousValuesFields =
  | 'id'
  | 'name'
  | 'slogan'
  | 'tel'
  | 'version_code'



  

export interface SystemPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  slogan: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  tel: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  version_code: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  


export interface UserWhereUniqueInput {
  id?: string | null
  email?: string | null
  openid?: string | null
}
export type UserWhereUniqueInputInputObject =
  | Extract<keyof UserWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'openid', alias?: string  } 
  
export interface MaterialWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  title?: string | null
  title_not?: string | null
  title_in?: string[]
  title_not_in?: string[]
  title_lt?: string | null
  title_lte?: string | null
  title_gt?: string | null
  title_gte?: string | null
  title_contains?: string | null
  title_not_contains?: string | null
  title_starts_with?: string | null
  title_not_starts_with?: string | null
  title_ends_with?: string | null
  title_not_ends_with?: string | null
  desc?: string | null
  desc_not?: string | null
  desc_in?: string[]
  desc_not_in?: string[]
  desc_lt?: string | null
  desc_lte?: string | null
  desc_gt?: string | null
  desc_gte?: string | null
  desc_contains?: string | null
  desc_not_contains?: string | null
  desc_starts_with?: string | null
  desc_not_starts_with?: string | null
  desc_ends_with?: string | null
  desc_not_ends_with?: string | null
  published?: boolean | null
  published_not?: boolean | null
  author?: UserWhereInput | null
  AND?: MaterialWhereInput[]
  OR?: MaterialWhereInput[]
  NOT?: MaterialWhereInput[]
}
export type MaterialWhereInputInputObject =
  | Extract<keyof MaterialWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'title_not', alias?: string  } 
  | { name: 'title_in', alias?: string  } 
  | { name: 'title_not_in', alias?: string  } 
  | { name: 'title_lt', alias?: string  } 
  | { name: 'title_lte', alias?: string  } 
  | { name: 'title_gt', alias?: string  } 
  | { name: 'title_gte', alias?: string  } 
  | { name: 'title_contains', alias?: string  } 
  | { name: 'title_not_contains', alias?: string  } 
  | { name: 'title_starts_with', alias?: string  } 
  | { name: 'title_not_starts_with', alias?: string  } 
  | { name: 'title_ends_with', alias?: string  } 
  | { name: 'title_not_ends_with', alias?: string  } 
  | { name: 'desc', alias?: string  } 
  | { name: 'desc_not', alias?: string  } 
  | { name: 'desc_in', alias?: string  } 
  | { name: 'desc_not_in', alias?: string  } 
  | { name: 'desc_lt', alias?: string  } 
  | { name: 'desc_lte', alias?: string  } 
  | { name: 'desc_gt', alias?: string  } 
  | { name: 'desc_gte', alias?: string  } 
  | { name: 'desc_contains', alias?: string  } 
  | { name: 'desc_not_contains', alias?: string  } 
  | { name: 'desc_starts_with', alias?: string  } 
  | { name: 'desc_not_starts_with', alias?: string  } 
  | { name: 'desc_ends_with', alias?: string  } 
  | { name: 'desc_not_ends_with', alias?: string  } 
  | { name: 'published', alias?: string  } 
  | { name: 'published_not', alias?: string  } 
  | { name: 'author', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface UserWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  role?: string | null
  role_not?: string | null
  role_in?: string[]
  role_not_in?: string[]
  role_lt?: string | null
  role_lte?: string | null
  role_gt?: string | null
  role_gte?: string | null
  role_contains?: string | null
  role_not_contains?: string | null
  role_starts_with?: string | null
  role_not_starts_with?: string | null
  role_ends_with?: string | null
  role_not_ends_with?: string | null
  email?: string | null
  email_not?: string | null
  email_in?: string[]
  email_not_in?: string[]
  email_lt?: string | null
  email_lte?: string | null
  email_gt?: string | null
  email_gte?: string | null
  email_contains?: string | null
  email_not_contains?: string | null
  email_starts_with?: string | null
  email_not_starts_with?: string | null
  email_ends_with?: string | null
  email_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  openid?: string | null
  openid_not?: string | null
  openid_in?: string[]
  openid_not_in?: string[]
  openid_lt?: string | null
  openid_lte?: string | null
  openid_gt?: string | null
  openid_gte?: string | null
  openid_contains?: string | null
  openid_not_contains?: string | null
  openid_starts_with?: string | null
  openid_not_starts_with?: string | null
  openid_ends_with?: string | null
  openid_not_ends_with?: string | null
  materials_every?: MaterialWhereInput | null
  materials_some?: MaterialWhereInput | null
  materials_none?: MaterialWhereInput | null
  status?: string | null
  status_not?: string | null
  status_in?: string[]
  status_not_in?: string[]
  status_lt?: string | null
  status_lte?: string | null
  status_gt?: string | null
  status_gte?: string | null
  status_contains?: string | null
  status_not_contains?: string | null
  status_starts_with?: string | null
  status_not_starts_with?: string | null
  status_ends_with?: string | null
  status_not_ends_with?: string | null
  AND?: UserWhereInput[]
  OR?: UserWhereInput[]
  NOT?: UserWhereInput[]
}
export type UserWhereInputInputObject =
  | Extract<keyof UserWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'role', alias?: string  } 
  | { name: 'role_not', alias?: string  } 
  | { name: 'role_in', alias?: string  } 
  | { name: 'role_not_in', alias?: string  } 
  | { name: 'role_lt', alias?: string  } 
  | { name: 'role_lte', alias?: string  } 
  | { name: 'role_gt', alias?: string  } 
  | { name: 'role_gte', alias?: string  } 
  | { name: 'role_contains', alias?: string  } 
  | { name: 'role_not_contains', alias?: string  } 
  | { name: 'role_starts_with', alias?: string  } 
  | { name: 'role_not_starts_with', alias?: string  } 
  | { name: 'role_ends_with', alias?: string  } 
  | { name: 'role_not_ends_with', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'email_not', alias?: string  } 
  | { name: 'email_in', alias?: string  } 
  | { name: 'email_not_in', alias?: string  } 
  | { name: 'email_lt', alias?: string  } 
  | { name: 'email_lte', alias?: string  } 
  | { name: 'email_gt', alias?: string  } 
  | { name: 'email_gte', alias?: string  } 
  | { name: 'email_contains', alias?: string  } 
  | { name: 'email_not_contains', alias?: string  } 
  | { name: 'email_starts_with', alias?: string  } 
  | { name: 'email_not_starts_with', alias?: string  } 
  | { name: 'email_ends_with', alias?: string  } 
  | { name: 'email_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'openid', alias?: string  } 
  | { name: 'openid_not', alias?: string  } 
  | { name: 'openid_in', alias?: string  } 
  | { name: 'openid_not_in', alias?: string  } 
  | { name: 'openid_lt', alias?: string  } 
  | { name: 'openid_lte', alias?: string  } 
  | { name: 'openid_gt', alias?: string  } 
  | { name: 'openid_gte', alias?: string  } 
  | { name: 'openid_contains', alias?: string  } 
  | { name: 'openid_not_contains', alias?: string  } 
  | { name: 'openid_starts_with', alias?: string  } 
  | { name: 'openid_not_starts_with', alias?: string  } 
  | { name: 'openid_ends_with', alias?: string  } 
  | { name: 'openid_not_ends_with', alias?: string  } 
  | { name: 'materials_every', alias?: string  } 
  | { name: 'materials_some', alias?: string  } 
  | { name: 'materials_none', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'status_not', alias?: string  } 
  | { name: 'status_in', alias?: string  } 
  | { name: 'status_not_in', alias?: string  } 
  | { name: 'status_lt', alias?: string  } 
  | { name: 'status_lte', alias?: string  } 
  | { name: 'status_gt', alias?: string  } 
  | { name: 'status_gte', alias?: string  } 
  | { name: 'status_contains', alias?: string  } 
  | { name: 'status_not_contains', alias?: string  } 
  | { name: 'status_starts_with', alias?: string  } 
  | { name: 'status_not_starts_with', alias?: string  } 
  | { name: 'status_ends_with', alias?: string  } 
  | { name: 'status_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface MaterialWhereUniqueInput {
  id?: string | null
}
export type MaterialWhereUniqueInputInputObject =
  | Extract<keyof MaterialWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface SystemWhereUniqueInput {
  id?: string | null
}
export type SystemWhereUniqueInputInputObject =
  | Extract<keyof SystemWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface SystemWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  slogan?: string | null
  slogan_not?: string | null
  slogan_in?: string[]
  slogan_not_in?: string[]
  slogan_lt?: string | null
  slogan_lte?: string | null
  slogan_gt?: string | null
  slogan_gte?: string | null
  slogan_contains?: string | null
  slogan_not_contains?: string | null
  slogan_starts_with?: string | null
  slogan_not_starts_with?: string | null
  slogan_ends_with?: string | null
  slogan_not_ends_with?: string | null
  tel?: string | null
  tel_not?: string | null
  tel_in?: string[]
  tel_not_in?: string[]
  tel_lt?: string | null
  tel_lte?: string | null
  tel_gt?: string | null
  tel_gte?: string | null
  tel_contains?: string | null
  tel_not_contains?: string | null
  tel_starts_with?: string | null
  tel_not_starts_with?: string | null
  tel_ends_with?: string | null
  tel_not_ends_with?: string | null
  version_code?: string | null
  version_code_not?: string | null
  version_code_in?: string[]
  version_code_not_in?: string[]
  version_code_lt?: string | null
  version_code_lte?: string | null
  version_code_gt?: string | null
  version_code_gte?: string | null
  version_code_contains?: string | null
  version_code_not_contains?: string | null
  version_code_starts_with?: string | null
  version_code_not_starts_with?: string | null
  version_code_ends_with?: string | null
  version_code_not_ends_with?: string | null
  AND?: SystemWhereInput[]
  OR?: SystemWhereInput[]
  NOT?: SystemWhereInput[]
}
export type SystemWhereInputInputObject =
  | Extract<keyof SystemWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'slogan', alias?: string  } 
  | { name: 'slogan_not', alias?: string  } 
  | { name: 'slogan_in', alias?: string  } 
  | { name: 'slogan_not_in', alias?: string  } 
  | { name: 'slogan_lt', alias?: string  } 
  | { name: 'slogan_lte', alias?: string  } 
  | { name: 'slogan_gt', alias?: string  } 
  | { name: 'slogan_gte', alias?: string  } 
  | { name: 'slogan_contains', alias?: string  } 
  | { name: 'slogan_not_contains', alias?: string  } 
  | { name: 'slogan_starts_with', alias?: string  } 
  | { name: 'slogan_not_starts_with', alias?: string  } 
  | { name: 'slogan_ends_with', alias?: string  } 
  | { name: 'slogan_not_ends_with', alias?: string  } 
  | { name: 'tel', alias?: string  } 
  | { name: 'tel_not', alias?: string  } 
  | { name: 'tel_in', alias?: string  } 
  | { name: 'tel_not_in', alias?: string  } 
  | { name: 'tel_lt', alias?: string  } 
  | { name: 'tel_lte', alias?: string  } 
  | { name: 'tel_gt', alias?: string  } 
  | { name: 'tel_gte', alias?: string  } 
  | { name: 'tel_contains', alias?: string  } 
  | { name: 'tel_not_contains', alias?: string  } 
  | { name: 'tel_starts_with', alias?: string  } 
  | { name: 'tel_not_starts_with', alias?: string  } 
  | { name: 'tel_ends_with', alias?: string  } 
  | { name: 'tel_not_ends_with', alias?: string  } 
  | { name: 'version_code', alias?: string  } 
  | { name: 'version_code_not', alias?: string  } 
  | { name: 'version_code_in', alias?: string  } 
  | { name: 'version_code_not_in', alias?: string  } 
  | { name: 'version_code_lt', alias?: string  } 
  | { name: 'version_code_lte', alias?: string  } 
  | { name: 'version_code_gt', alias?: string  } 
  | { name: 'version_code_gte', alias?: string  } 
  | { name: 'version_code_contains', alias?: string  } 
  | { name: 'version_code_not_contains', alias?: string  } 
  | { name: 'version_code_starts_with', alias?: string  } 
  | { name: 'version_code_not_starts_with', alias?: string  } 
  | { name: 'version_code_ends_with', alias?: string  } 
  | { name: 'version_code_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface UserCreateInput {
  id?: string | null
  role?: string | null
  email?: string | null
  name?: string
  openid?: string | null
  materials?: MaterialCreateManyWithoutAuthorInput | null
  status?: string | null
}
export type UserCreateInputInputObject =
  | Extract<keyof UserCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'role', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'openid', alias?: string  } 
  | { name: 'materials', alias?: string  } 
  | { name: 'status', alias?: string  } 
  
export interface MaterialCreateManyWithoutAuthorInput {
  create?: MaterialCreateWithoutAuthorInput[]
  connect?: MaterialWhereUniqueInput[]
}
export type MaterialCreateManyWithoutAuthorInputInputObject =
  | Extract<keyof MaterialCreateManyWithoutAuthorInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface MaterialCreateWithoutAuthorInput {
  id?: string | null
  title?: string
  desc?: string | null
  published?: boolean | null
}
export type MaterialCreateWithoutAuthorInputInputObject =
  | Extract<keyof MaterialCreateWithoutAuthorInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'desc', alias?: string  } 
  | { name: 'published', alias?: string  } 
  
export interface UserUpdateInput {
  role?: string | null
  email?: string | null
  name?: string | null
  openid?: string | null
  materials?: MaterialUpdateManyWithoutAuthorInput | null
  status?: string | null
}
export type UserUpdateInputInputObject =
  | Extract<keyof UserUpdateInput, string>
  | { name: 'role', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'openid', alias?: string  } 
  | { name: 'materials', alias?: string  } 
  | { name: 'status', alias?: string  } 
  
export interface MaterialUpdateManyWithoutAuthorInput {
  create?: MaterialCreateWithoutAuthorInput[]
  delete?: MaterialWhereUniqueInput[]
  connect?: MaterialWhereUniqueInput[]
  set?: MaterialWhereUniqueInput[]
  disconnect?: MaterialWhereUniqueInput[]
  update?: MaterialUpdateWithWhereUniqueWithoutAuthorInput[]
  upsert?: MaterialUpsertWithWhereUniqueWithoutAuthorInput[]
  deleteMany?: MaterialScalarWhereInput[]
  updateMany?: MaterialUpdateManyWithWhereNestedInput[]
}
export type MaterialUpdateManyWithoutAuthorInputInputObject =
  | Extract<keyof MaterialUpdateManyWithoutAuthorInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface MaterialUpdateWithWhereUniqueWithoutAuthorInput {
  where?: MaterialWhereUniqueInput
  data?: MaterialUpdateWithoutAuthorDataInput
}
export type MaterialUpdateWithWhereUniqueWithoutAuthorInputInputObject =
  | Extract<keyof MaterialUpdateWithWhereUniqueWithoutAuthorInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface MaterialUpdateWithoutAuthorDataInput {
  title?: string | null
  desc?: string | null
  published?: boolean | null
}
export type MaterialUpdateWithoutAuthorDataInputInputObject =
  | Extract<keyof MaterialUpdateWithoutAuthorDataInput, string>
  | { name: 'title', alias?: string  } 
  | { name: 'desc', alias?: string  } 
  | { name: 'published', alias?: string  } 
  
export interface MaterialUpsertWithWhereUniqueWithoutAuthorInput {
  where?: MaterialWhereUniqueInput
  update?: MaterialUpdateWithoutAuthorDataInput
  create?: MaterialCreateWithoutAuthorInput
}
export type MaterialUpsertWithWhereUniqueWithoutAuthorInputInputObject =
  | Extract<keyof MaterialUpsertWithWhereUniqueWithoutAuthorInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface MaterialScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  title?: string | null
  title_not?: string | null
  title_in?: string[]
  title_not_in?: string[]
  title_lt?: string | null
  title_lte?: string | null
  title_gt?: string | null
  title_gte?: string | null
  title_contains?: string | null
  title_not_contains?: string | null
  title_starts_with?: string | null
  title_not_starts_with?: string | null
  title_ends_with?: string | null
  title_not_ends_with?: string | null
  desc?: string | null
  desc_not?: string | null
  desc_in?: string[]
  desc_not_in?: string[]
  desc_lt?: string | null
  desc_lte?: string | null
  desc_gt?: string | null
  desc_gte?: string | null
  desc_contains?: string | null
  desc_not_contains?: string | null
  desc_starts_with?: string | null
  desc_not_starts_with?: string | null
  desc_ends_with?: string | null
  desc_not_ends_with?: string | null
  published?: boolean | null
  published_not?: boolean | null
  AND?: MaterialScalarWhereInput[]
  OR?: MaterialScalarWhereInput[]
  NOT?: MaterialScalarWhereInput[]
}
export type MaterialScalarWhereInputInputObject =
  | Extract<keyof MaterialScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'title_not', alias?: string  } 
  | { name: 'title_in', alias?: string  } 
  | { name: 'title_not_in', alias?: string  } 
  | { name: 'title_lt', alias?: string  } 
  | { name: 'title_lte', alias?: string  } 
  | { name: 'title_gt', alias?: string  } 
  | { name: 'title_gte', alias?: string  } 
  | { name: 'title_contains', alias?: string  } 
  | { name: 'title_not_contains', alias?: string  } 
  | { name: 'title_starts_with', alias?: string  } 
  | { name: 'title_not_starts_with', alias?: string  } 
  | { name: 'title_ends_with', alias?: string  } 
  | { name: 'title_not_ends_with', alias?: string  } 
  | { name: 'desc', alias?: string  } 
  | { name: 'desc_not', alias?: string  } 
  | { name: 'desc_in', alias?: string  } 
  | { name: 'desc_not_in', alias?: string  } 
  | { name: 'desc_lt', alias?: string  } 
  | { name: 'desc_lte', alias?: string  } 
  | { name: 'desc_gt', alias?: string  } 
  | { name: 'desc_gte', alias?: string  } 
  | { name: 'desc_contains', alias?: string  } 
  | { name: 'desc_not_contains', alias?: string  } 
  | { name: 'desc_starts_with', alias?: string  } 
  | { name: 'desc_not_starts_with', alias?: string  } 
  | { name: 'desc_ends_with', alias?: string  } 
  | { name: 'desc_not_ends_with', alias?: string  } 
  | { name: 'published', alias?: string  } 
  | { name: 'published_not', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface MaterialUpdateManyWithWhereNestedInput {
  where?: MaterialScalarWhereInput
  data?: MaterialUpdateManyDataInput
}
export type MaterialUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof MaterialUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface MaterialUpdateManyDataInput {
  title?: string | null
  desc?: string | null
  published?: boolean | null
}
export type MaterialUpdateManyDataInputInputObject =
  | Extract<keyof MaterialUpdateManyDataInput, string>
  | { name: 'title', alias?: string  } 
  | { name: 'desc', alias?: string  } 
  | { name: 'published', alias?: string  } 
  
export interface UserUpdateManyMutationInput {
  role?: string | null
  email?: string | null
  name?: string | null
  openid?: string | null
  status?: string | null
}
export type UserUpdateManyMutationInputInputObject =
  | Extract<keyof UserUpdateManyMutationInput, string>
  | { name: 'role', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'openid', alias?: string  } 
  | { name: 'status', alias?: string  } 
  
export interface MaterialCreateInput {
  id?: string | null
  title?: string
  desc?: string | null
  published?: boolean | null
  author?: UserCreateOneWithoutMaterialsInput | null
}
export type MaterialCreateInputInputObject =
  | Extract<keyof MaterialCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'desc', alias?: string  } 
  | { name: 'published', alias?: string  } 
  | { name: 'author', alias?: string  } 
  
export interface UserCreateOneWithoutMaterialsInput {
  create?: UserCreateWithoutMaterialsInput | null
  connect?: UserWhereUniqueInput | null
}
export type UserCreateOneWithoutMaterialsInputInputObject =
  | Extract<keyof UserCreateOneWithoutMaterialsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserCreateWithoutMaterialsInput {
  id?: string | null
  role?: string | null
  email?: string | null
  name?: string
  openid?: string | null
  status?: string | null
}
export type UserCreateWithoutMaterialsInputInputObject =
  | Extract<keyof UserCreateWithoutMaterialsInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'role', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'openid', alias?: string  } 
  | { name: 'status', alias?: string  } 
  
export interface MaterialUpdateInput {
  title?: string | null
  desc?: string | null
  published?: boolean | null
  author?: UserUpdateOneWithoutMaterialsInput | null
}
export type MaterialUpdateInputInputObject =
  | Extract<keyof MaterialUpdateInput, string>
  | { name: 'title', alias?: string  } 
  | { name: 'desc', alias?: string  } 
  | { name: 'published', alias?: string  } 
  | { name: 'author', alias?: string  } 
  
export interface UserUpdateOneWithoutMaterialsInput {
  create?: UserCreateWithoutMaterialsInput | null
  update?: UserUpdateWithoutMaterialsDataInput | null
  upsert?: UserUpsertWithoutMaterialsInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: UserWhereUniqueInput | null
}
export type UserUpdateOneWithoutMaterialsInputInputObject =
  | Extract<keyof UserUpdateOneWithoutMaterialsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserUpdateWithoutMaterialsDataInput {
  role?: string | null
  email?: string | null
  name?: string | null
  openid?: string | null
  status?: string | null
}
export type UserUpdateWithoutMaterialsDataInputInputObject =
  | Extract<keyof UserUpdateWithoutMaterialsDataInput, string>
  | { name: 'role', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'openid', alias?: string  } 
  | { name: 'status', alias?: string  } 
  
export interface UserUpsertWithoutMaterialsInput {
  update?: UserUpdateWithoutMaterialsDataInput
  create?: UserCreateWithoutMaterialsInput
}
export type UserUpsertWithoutMaterialsInputInputObject =
  | Extract<keyof UserUpsertWithoutMaterialsInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface MaterialUpdateManyMutationInput {
  title?: string | null
  desc?: string | null
  published?: boolean | null
}
export type MaterialUpdateManyMutationInputInputObject =
  | Extract<keyof MaterialUpdateManyMutationInput, string>
  | { name: 'title', alias?: string  } 
  | { name: 'desc', alias?: string  } 
  | { name: 'published', alias?: string  } 
  
export interface SystemCreateInput {
  id?: string | null
  name?: string
  slogan?: string | null
  tel?: string | null
  version_code?: string | null
}
export type SystemCreateInputInputObject =
  | Extract<keyof SystemCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'slogan', alias?: string  } 
  | { name: 'tel', alias?: string  } 
  | { name: 'version_code', alias?: string  } 
  
export interface SystemUpdateInput {
  name?: string | null
  slogan?: string | null
  tel?: string | null
  version_code?: string | null
}
export type SystemUpdateInputInputObject =
  | Extract<keyof SystemUpdateInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'slogan', alias?: string  } 
  | { name: 'tel', alias?: string  } 
  | { name: 'version_code', alias?: string  } 
  
export interface SystemUpdateManyMutationInput {
  name?: string | null
  slogan?: string | null
  tel?: string | null
  version_code?: string | null
}
export type SystemUpdateManyMutationInputInputObject =
  | Extract<keyof SystemUpdateManyMutationInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'slogan', alias?: string  } 
  | { name: 'tel', alias?: string  } 
  | { name: 'version_code', alias?: string  } 
  
export interface UserSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: UserWhereInput | null
  AND?: UserSubscriptionWhereInput[]
  OR?: UserSubscriptionWhereInput[]
  NOT?: UserSubscriptionWhereInput[]
}
export type UserSubscriptionWhereInputInputObject =
  | Extract<keyof UserSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface MaterialSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: MaterialWhereInput | null
  AND?: MaterialSubscriptionWhereInput[]
  OR?: MaterialSubscriptionWhereInput[]
  NOT?: MaterialSubscriptionWhereInput[]
}
export type MaterialSubscriptionWhereInputInputObject =
  | Extract<keyof MaterialSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface SystemSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: SystemWhereInput | null
  AND?: SystemSubscriptionWhereInput[]
  OR?: SystemSubscriptionWhereInput[]
  NOT?: SystemSubscriptionWhereInput[]
}
export type SystemSubscriptionWhereInputInputObject =
  | Extract<keyof SystemSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  

export type MaterialOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'title_ASC'
  | 'title_DESC'
  | 'desc_ASC'
  | 'desc_DESC'
  | 'published_ASC'
  | 'published_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type UserOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'role_ASC'
  | 'role_DESC'
  | 'email_ASC'
  | 'email_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'openid_ASC'
  | 'openid_DESC'
  | 'status_ASC'
  | 'status_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type SystemOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'slogan_ASC'
  | 'slogan_DESC'
  | 'tel_ASC'
  | 'tel_DESC'
  | 'version_code_ASC'
  | 'version_code_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type MutationTypeValues =
  | 'CREATED'
  | 'UPDATED'
  | 'DELETED'
  
  