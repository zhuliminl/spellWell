### This file was autogenerated by Nexus 0.11.7
### Do not make changes to this file directly


type Mutation {
  createDraft(authorId: ID, title: String): Post!
  createUser(data: UserCreateInput!): User!
  publish(id: ID): Post
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
}

type Post {
  author: User
  id: ID!
  published: Boolean!
  slag: String
  title: String!
}

input PostCreateManyWithoutAuthorInput {
  connect: [PostWhereUniqueInput!]
  create: [PostCreateWithoutAuthorInput!]
}

input PostCreateWithoutAuthorInput {
  id: ID
  published: Boolean
  slag: String
  title: String!
}

enum PostOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  published_ASC
  published_DESC
  slag_ASC
  slag_DESC
  title_ASC
  title_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input PostScalarWhereInput {
  AND: [PostScalarWhereInput!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  NOT: [PostScalarWhereInput!]
  OR: [PostScalarWhereInput!]
  published: Boolean
  published_not: Boolean
  slag: String
  slag_contains: String
  slag_ends_with: String
  slag_gt: String
  slag_gte: String
  slag_in: [String!]
  slag_lt: String
  slag_lte: String
  slag_not: String
  slag_not_contains: String
  slag_not_ends_with: String
  slag_not_in: [String!]
  slag_not_starts_with: String
  slag_starts_with: String
  title: String
  title_contains: String
  title_ends_with: String
  title_gt: String
  title_gte: String
  title_in: [String!]
  title_lt: String
  title_lte: String
  title_not: String
  title_not_contains: String
  title_not_ends_with: String
  title_not_in: [String!]
  title_not_starts_with: String
  title_starts_with: String
}

input PostUpdateManyDataInput {
  published: Boolean
  slag: String
  title: String
}

input PostUpdateManyWithoutAuthorInput {
  connect: [PostWhereUniqueInput!]
  create: [PostCreateWithoutAuthorInput!]
  delete: [PostWhereUniqueInput!]
  deleteMany: [PostScalarWhereInput!]
  disconnect: [PostWhereUniqueInput!]
  set: [PostWhereUniqueInput!]
  update: [PostUpdateWithWhereUniqueWithoutAuthorInput!]
  updateMany: [PostUpdateManyWithWhereNestedInput!]
  upsert: [PostUpsertWithWhereUniqueWithoutAuthorInput!]
}

input PostUpdateManyWithWhereNestedInput {
  data: PostUpdateManyDataInput!
  where: PostScalarWhereInput!
}

input PostUpdateWithoutAuthorDataInput {
  published: Boolean
  slag: String
  title: String
}

input PostUpdateWithWhereUniqueWithoutAuthorInput {
  data: PostUpdateWithoutAuthorDataInput!
  where: PostWhereUniqueInput!
}

input PostUpsertWithWhereUniqueWithoutAuthorInput {
  create: PostCreateWithoutAuthorInput!
  update: PostUpdateWithoutAuthorDataInput!
  where: PostWhereUniqueInput!
}

input PostWhereInput {
  AND: [PostWhereInput!]
  author: UserWhereInput
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  NOT: [PostWhereInput!]
  OR: [PostWhereInput!]
  published: Boolean
  published_not: Boolean
  slag: String
  slag_contains: String
  slag_ends_with: String
  slag_gt: String
  slag_gte: String
  slag_in: [String!]
  slag_lt: String
  slag_lte: String
  slag_not: String
  slag_not_contains: String
  slag_not_ends_with: String
  slag_not_in: [String!]
  slag_not_starts_with: String
  slag_starts_with: String
  title: String
  title_contains: String
  title_ends_with: String
  title_gt: String
  title_gte: String
  title_in: [String!]
  title_lt: String
  title_lte: String
  title_not: String
  title_not_contains: String
  title_not_ends_with: String
  title_not_in: [String!]
  title_not_starts_with: String
  title_starts_with: String
}

input PostWhereUniqueInput {
  id: ID
}

type Query {
  feed: [Post!]!
  posts(after: String, before: String, first: Int, last: Int, orderBy: PostOrderByInput, skip: Int, where: PostWhereInput): [Post!]!
  users(after: String, before: String, first: Int, last: Int, orderBy: UserOrderByInput, skip: Int, where: UserWhereInput): [User!]!
}

type User {
  fullname: String!
  id: ID!
  name: String!
  posts(after: String, before: String, first: Int, last: Int, orderBy: PostOrderByInput, skip: Int, where: PostWhereInput): [Post!]
  saul: String!
}

input UserCreateInput {
  age: String
  email: String
  id: ID
  job: String
  name: String!
  posts: PostCreateManyWithoutAuthorInput
  username: String
}

enum UserOrderByInput {
  age_ASC
  age_DESC
  createdAt_ASC
  createdAt_DESC
  email_ASC
  email_DESC
  id_ASC
  id_DESC
  job_ASC
  job_DESC
  name_ASC
  name_DESC
  updatedAt_ASC
  updatedAt_DESC
  username_ASC
  username_DESC
}

input UserUpdateInput {
  age: String
  email: String
  job: String
  name: String
  posts: PostUpdateManyWithoutAuthorInput
  username: String
}

input UserWhereInput {
  age: String
  age_contains: String
  age_ends_with: String
  age_gt: String
  age_gte: String
  age_in: [String!]
  age_lt: String
  age_lte: String
  age_not: String
  age_not_contains: String
  age_not_ends_with: String
  age_not_in: [String!]
  age_not_starts_with: String
  age_starts_with: String
  AND: [UserWhereInput!]
  email: String
  email_contains: String
  email_ends_with: String
  email_gt: String
  email_gte: String
  email_in: [String!]
  email_lt: String
  email_lte: String
  email_not: String
  email_not_contains: String
  email_not_ends_with: String
  email_not_in: [String!]
  email_not_starts_with: String
  email_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  job: String
  job_contains: String
  job_ends_with: String
  job_gt: String
  job_gte: String
  job_in: [String!]
  job_lt: String
  job_lte: String
  job_not: String
  job_not_contains: String
  job_not_ends_with: String
  job_not_in: [String!]
  job_not_starts_with: String
  job_starts_with: String
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  posts_every: PostWhereInput
  posts_none: PostWhereInput
  posts_some: PostWhereInput
  username: String
  username_contains: String
  username_ends_with: String
  username_gt: String
  username_gte: String
  username_in: [String!]
  username_lt: String
  username_lte: String
  username_not: String
  username_not_contains: String
  username_not_ends_with: String
  username_not_in: [String!]
  username_not_starts_with: String
  username_starts_with: String
}

input UserWhereUniqueInput {
  email: String
  id: ID
}
